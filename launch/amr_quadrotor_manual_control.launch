<launch>
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find amr_description)/world/cyberzoo.world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="false"/>
    <arg name="gui" value="false"/>
  </include>

  <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find amr_description)/iris.xacro'"
  />

  <group ns="iris">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="iris" />
      <arg name="model" value="$(find amr_description)/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="true" />
      <arg name="enable_ground_truth" value="true" />
      <arg name="log_file" value="iris"/>
    </include>
    <node name="joy_node" pkg="joy" type="joy_node" />
    <node name="amr_joy_interface" pkg="amr_joy_interface" type="amr_joy_interface" />
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam
        command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_iris.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/iris.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find amr_joy_interface)/rviz/amr_quadrotor_manual_control.rviz" />
  </group>
</launch>
